@using TCC.Domain.Models;
@inject SignInManager<Usuario> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}

<style>
    .nav-pills .nav-link.active, .nav-pills .show > .nav-link {
        background-color: var(--roxo-claro1) !important;
    }

    .nav-pills .nav-link.active, .nav-pills .show > .nav-link{
        color: var(--verde-destaque);
    }

    .nav-pills .nav-link, .nav-pills .show > .nav-link {
        color: white;
    }
</style>

<ul class="nav nav-pills flex-column">
    <li class="nav-item"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">Perfil</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email">Email</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">Senha</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.PedidosNavClass(ViewContext)" id="pedidos" asp-page="./Pedidos">Pedidos</a></li>

    @if (hasExternalLogins)
    {
        <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">External logins</a></li>
    }
</ul>

